// <auto-generated />
using System;
using Flight.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Flight.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(FlightDbContext))]
    [Migration("20240904203635_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Flight.Domain.Entities.Flight", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("flight_id");

                    b.Property<int>("AirlineId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("airline_id");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("arrival_time");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("departure_time");

                    b.Property<int>("RouteId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("route_id");

                    b.HasKey("Id");

                    b.HasIndex("RouteId", "DepartureTime");

                    b.ToTable("flights", (string)null);
                });

            modelBuilder.Entity("Flight.Domain.Entities.Route", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("route_id");

                    b.Property<DateOnly>("DepartureDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("departure_date");

                    b.Property<int>("DestinationCityId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("destination_city_id");

                    b.Property<int>("OriginCityId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("origin_city_id");

                    b.HasKey("Id");

                    b.HasIndex("OriginCityId", "DestinationCityId");

                    b.ToTable("routes", (string)null);
                });

            modelBuilder.Entity("Flight.Domain.Entities.Subscription", b =>
                {
                    b.Property<byte>("AgencyId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("agency_id");

                    b.Property<int>("OriginCityId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("origin_city_id");

                    b.Property<int>("DestinationCityId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("destination_city_id");

                    b.HasKey("AgencyId", "OriginCityId", "DestinationCityId");

                    b.ToTable("subscriptions", (string)null);
                });

            modelBuilder.Entity("Flight.Domain.Entities.Flight", b =>
                {
                    b.HasOne("Flight.Domain.Entities.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });
#pragma warning restore 612, 618
        }
    }
}
